version: '3.9'

services:
  backend:
    container_name: backend
    build: ./backend
    command: /scripts/start_prod.sh
    depends_on:
      - db
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - django-static:/app/static
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${DJANGO_CORS_ALLOWED_ORIGINS}
      - CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
      - DEBUG=0
    networks:
      - main

  db:
    image: postgres:16.1-alpine3.19
    restart: always
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - '5432:5432'
    volumes:
      - dbdata:/var/lib/postgresql/data/
    networks:
      - main

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx/prod/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - main
    volumes:
      - ./nginx/prod/prod.conf:/etc/nginx/nginx.conf:ro
      - django-static:/usr/src/app/static

volumes:
  dbdata:
  django-static:

networks:
  main:
    driver: bridge